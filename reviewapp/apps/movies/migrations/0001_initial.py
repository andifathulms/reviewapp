# Generated by Django 5.2.7 on 2025-10-26 13:06

import django.db.models.deletion
import reviewapp.core.utils
import thumbnails.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MovieCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, help_text='ISO country code', max_length=5)),
            ],
            options={
                'verbose_name_plural': 'Movie countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MovieDirector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('bio', models.TextField(blank=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('photo', thumbnails.fields.ImageField(blank=True, null=True, upload_to=reviewapp.core.utils.FilenameGenerator(prefix='director_photos'))),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MovieLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, help_text='ISO language code', max_length=10)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MovieReviewCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('weight', models.FloatField(default=1.0)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('tagline', models.TextField(blank=True)),
                ('synopsis', models.TextField(blank=True)),
                ('image', thumbnails.fields.ImageField(blank=True, null=True, upload_to=reviewapp.core.utils.FilenameGenerator(prefix='movie_images'))),
                ('release_year', models.PositiveIntegerField()),
                ('runtime', models.PositiveIntegerField(help_text='Runtime in minutes')),
                ('imdb_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('country', models.ManyToManyField(blank=True, to='movies.moviecountry')),
                ('director', models.ManyToManyField(blank=True, to='movies.moviedirector')),
                ('genre', models.ManyToManyField(blank=True, to='movies.moviegenre')),
                ('language', models.ManyToManyField(blank=True, to='movies.movielanguage')),
            ],
            options={
                'ordering': ['-release_year', 'title'],
            },
        ),
        migrations.CreateModel(
            name='MovieReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.FloatField()),
                ('imdb_rating', models.FloatField(blank=True, null=True)),
                ('rottentomatoes_rating', models.FloatField(blank=True, null=True)),
                ('review_summary', models.TextField(blank=True, help_text='Brief summary of the review', null=True)),
                ('detailed_review', models.TextField(help_text='Full detailed review')),
                ('final_verdict', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='movies.movie')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='MovieAspectRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField()),
                ('review_text', models.TextField()),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aspect_ratings', to='movies.moviereview')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.moviereviewcategory')),
            ],
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['release_year'], name='movies_movi_release_81d5c9_idx'),
        ),
        migrations.AddIndex(
            model_name='movie',
            index=models.Index(fields=['title'], name='movies_movi_title_652549_idx'),
        ),
        migrations.AddIndex(
            model_name='moviereview',
            index=models.Index(fields=['movie', 'created'], name='movies_movi_movie_i_04ed54_idx'),
        ),
        migrations.AddIndex(
            model_name='moviereview',
            index=models.Index(fields=['overall_rating'], name='movies_movi_overall_debe60_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='moviereview',
            unique_together={('movie', 'created_by')},
        ),
        migrations.AlterUniqueTogether(
            name='movieaspectrating',
            unique_together={('review', 'category')},
        ),
    ]
